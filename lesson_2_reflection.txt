What happens when you initialize a repository? Why do you need to do it?

It creates the files needed to track the history of the poject.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It gives you the chance to choose which files you want to track giving more flexibility and ability to optimize.

How can you use the staging area to make sure you have one commit per logical change?

I can use the staging area to group files to match logical changes.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When experimenting or developing a new feature. Or when reingeneering a core part of the code.

How do the diagrams help you visualize the branch structure?

They give a temporal visualization of the changes.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

It's a version of the apps with all the charactteristics of both branches. We represent it like that because we show where they diverged and the paralel development they had before merging.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?

Pros: You can get really fast the merged version of you app with just one mommand. Cons: You can get redundant pieces of code or even code that is not working properly